name: Build and Release APK

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production
          - both

jobs:
  build:
    name: Build Flutter APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.1'
        channel: 'stable'

    - name: Get Flutter dependencies
      working-directory: ./src
      run: flutter pub get

    - name: Build Development APK
      if: ${{ github.event.inputs.release_type == 'development' || github.event.inputs.release_type == 'both' || startsWith(github.ref, 'refs/tags/') }}
      working-directory: ./src
      run: |
        flutter build apk --flavor development --target lib/main/main_development.dart --release
        mv build/app/outputs/flutter-apk/app-development-release.apk ../gamemaster-pro-development.apk

    - name: Build Production APK
      if: ${{ github.event.inputs.release_type == 'production' || github.event.inputs.release_type == 'both' || startsWith(github.ref, 'refs/tags/') }}
      working-directory: ./src
      run: |
        flutter build apk --flavor production --target lib/main/main_production.dart --release
        mv build/app/outputs/flutter-apk/app-production-release.apk ../gamemaster-pro-production.apk

    - name: Get App Version
      id: version
      working-directory: ./src
      run: |
        VERSION=$(grep "version:" pubspec.yaml | cut -d ' ' -f2 | tr -d '\r')
        echo "app_version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.release_type
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || format('v{0}', steps.version.outputs.app_version) }}
        name: GameMaster Pro ${{ github.ref_name || format('v{0}', steps.version.outputs.app_version) }}
        body: |
          ## GameMaster Pro Release ${{ github.ref_name || format('v{0}', steps.version.outputs.app_version) }}
          
          ### üöÄ What's New
          - Flutter app with Bloc/Cubit architecture
          - Support for both Development and Production flavors
          - Modern UI with responsive design
          - AI-powered support chat integration
          - Games management system
          
          ### üì± Downloads
          - **Development APK**: For testing with debug features
          - **Production APK**: Optimized release build
          
          ### üõ†Ô∏è Technical Details
          - **Flutter Version**: 3.24.1
          - **Architecture**: Bloc/Cubit state management
          - **Build Type**: Release APK
          - **Target SDK**: Android API 34
          
          ### üìã Installation
          1. Download the appropriate APK file
          2. Enable "Unknown Sources" in Android settings
          3. Install the APK file
          4. Launch GameMaster Pro!
          
          ---
          **Auto-generated release from GitHub Actions**
        files: |
          gamemaster-pro-development.apk
          gamemaster-pro-production.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Development APK as Artifact
      if: ${{ github.event.inputs.release_type == 'development' || github.event.inputs.release_type == 'both' || startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v4
      with:
        name: gamemaster-pro-development-apk
        path: gamemaster-pro-development.apk
        retention-days: 30

    - name: Upload Production APK as Artifact
      if: ${{ github.event.inputs.release_type == 'production' || github.event.inputs.release_type == 'both' || startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v4
      with:
        name: gamemaster-pro-production-apk
        path: gamemaster-pro-production.apk
        retention-days: 30